/* como estos datos se van a repetir creamos variables */
:root {
    --primary-clr: #0052ff;
    --secondary-clr: #ffffff;
}

* {
    box-sizing: border-box;
}


body {
    margin: 0;
    padding: 0;
}

    /* linea debajo del menu */
    /* sombra x (positivo a la derecha) y positivo (abajo)
    blur o difuminado en px, spead-radius, color */

/* Estos estilos corresponden al header */
/* altura menu superior */
/* separa el logo del (boton + menu) y segun tamaño
    se van manteniendo de la misma manera */
        /* linea debajo del menu */
    /* sombra x (positivo a la derecha) y positivo (abajo)
    blur o difuminado en px, spead-radius, color */
header > .top-menu-container {
    display: flex;
    flex-direction: row;
    align-items:center;
    justify-content: space-between;
    background-color: aqua;
    /* padding-left: 0; */
    /* justify-content: center; */
    /* box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.178); */
    max-height: 55px;
    max-width: 100%;
} 

header .top-menu-container .logo img {
    width: 10rem;
    /* height: 20px; */
    margin-left: 0rem;
}

header .top-menu-container .buttons-container {
    display: flex;
    gap: 1rem;
    align-items: center;
}

    /* usar la variable declarada con var */
header .top-menu-container .get-started {
    height: 36px;
    width: 107px;
    border-radius: 5px;
    border: none;
    font-size: 12px;
    background-color: var(--primary-clr);
    color: var(--secundary-clr);
    font-weight: 600;
    font-size: 14px;
    margin: 0.5rem 0;
}

/* header .hamburger .hamburger--vortex .hamburger-box { */
/* .hamburger-inner {
    display: grid;
    background-color: red;
} */

/* mostrar el menu */   /* para que quede justo a la
    altura del dispositivo se debe
    calcular el total de la altura 
    del dispositivo menos la altura
    del menu*/
header .drop-down-menu {
    display: grid;
    height: 50vw; 
    height: calc(100vh - 55px);
    display: flex;
    gap: 1.5rem;
}

/* ocultar el menu */
header .hidden {
    display: none;
}

/* muestro el menu por javascript */
/* menu.classList.toggle('show') */
header .show {
    display: grid;
}

   /* deja un espacio al arriba y abajo, luego
    centra todo en forma vertical cada item */
    /* para distanciarlos a los items del menu */
header .drop-down-menu nav ul {
    list-style: none;
    padding: 0;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding-left: 1.75rem;
    margin-top: 1.75rem;
    font-size: 1.1rem;
    font-weight: 600;
}

header .drop-down-menu nav ul li a {
    text-decoration: none;
    color: black;
    font-weight: bold;
    font-family: 'Times New Roman', Times, serif;    
}
  /* definir el margen para que se adapte
    al responsive *//* contenedor de los botones */
header .drop-down-menu .menu-buttons-container {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    margin: 1.75rem;
}

    /* estilo de los botones *//* child(1) */
.btn-style {
    padding: 1.5rem 0;
    font-size: 1.05rem;
    font-weight: bold;
    border-style: none;
    border-radius: 4px;
    cursor: pointer;
    background-color: var(--primary-clr);
    color: var(--secondary-clr);
}


    /* de la clase menu-buttons-container
button:nth-child(1) sería el primer boton hijo 
    button:nth-child(2) sería el segundo 
    boton hijo.
    El child(1) esta definido en la clase
    btn-style */

/* por defecto los botones se configuran
    en la clase btn-style, luego en este caso
    se sobreescribe */
header .drop-down-menu .menu-buttons-container button:nth-child(2) {  
    background-color: var(--secondary-clr);
    border: 3.5px solid var(--primary-clr);
    color: var(--primary-clr);
}

/* Estilos correspondientes a la primera seccion  */

#welcome-section {
    margin-left: 50px;
}

#welcome-section .svg-container {
    display: flex;
    align-items: center;
    gap: 0.9rem;
    font-size: 15px;
    font-weight: 700;
    color: var(--primary-clr);
    padding-left: 20px;
}

h2 {
    font-size: 3rem;
}

h3 {
    font-size: 1.5rem;
    text-align: center;
}

p {
    line-height: 1.5rem;
    font-size: 18px;
    font-weight: 500;
    max-width: 80%;
    text-align: center;
    margin: 1.75rem;
}

  /* definir el margen para que se adapte
    al responsive */
    /* contenedor de los botones */
#welcome-section > .input-container {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    margin: 1.75rem;
    gap: 20px;
}

/* se aplica clase btn-style, se configura con 
    child(2) */
#welcome-section > .input-container input {
    background-color: var(--secondary-clr);
    border: 2px solid rgba(0, 0, 0, 0.14);
    color: rgba(0, 0, 0, 0.5);
}

/* objeto::propiedad para definir algo específico */
#welcome-section > .input-container input::placeholder {
    padding-left: 1rem;
}

#create-section {
    margin: 4rem 0;
}

#create-section .create-upper-container {
    text-align: center;
}

/* #create-section .create-upper-container .create-img-container { */
    /* ancho maximo es el ancho de la ventana
    esto hace escalable pero desde html con 100% */
    /* max-width: 100vw; */
   
/* } */

/* se resuelve asi: */
img{
    max-width: 100%;
}

#create-section .create-specifications-container .create-specifications-items {
    display: flex;
    flex-direction: column;
    margin: 2.5rem 0;
    align-items: center;
}

.description-container > p {
    color:#5b616e;
    max-width: 100%;
    justify-content: center;
}

.description-container h3 {
    font-size: 1.4rem;
    max-width: 100%;
}